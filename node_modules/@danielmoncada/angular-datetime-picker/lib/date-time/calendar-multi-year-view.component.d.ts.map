{"version":3,"file":"calendar-multi-year-view.component.d.ts","sources":["calendar-multi-year-view.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * calendar-multi-year-view.component\n */\nimport { AfterContentInit, ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { SelectMode } from './date-time.class';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nexport declare const YEARS_PER_ROW = 3;\nexport declare const YEAR_ROWS = 7;\nexport declare class OwlMultiYearViewComponent<T> implements OnInit, AfterContentInit {\n    private cdRef;\n    private pickerIntl;\n    private dateTimeAdapter;\n    /**\n     * The select mode of the picker;\n     * */\n    private _selectMode;\n    get selectMode(): SelectMode;\n    set selectMode(val: SelectMode);\n    /** The currently selected date. */\n    private _selected;\n    get selected(): T | null;\n    set selected(value: T | null);\n    private _selecteds;\n    get selecteds(): T[];\n    set selecteds(values: T[]);\n    private _pickerMoment;\n    get pickerMoment(): T;\n    set pickerMoment(value: T);\n    /**\n     * A function used to filter which dates are selectable\n     * */\n    private _dateFilter;\n    get dateFilter(): (date: T) => boolean;\n    set dateFilter(filter: (date: T) => boolean);\n    /** The minimum selectable date. */\n    private _minDate;\n    get minDate(): T | null;\n    set minDate(value: T | null);\n    /** The maximum selectable date. */\n    private _maxDate;\n    get maxDate(): T | null;\n    set maxDate(value: T | null);\n    private _todayYear;\n    get todayYear(): number;\n    private _years;\n    get years(): CalendarCell[][];\n    private _selectedYears;\n    get selectedYears(): number[];\n    private initiated;\n    get isInSingleMode(): boolean;\n    get isInRangeMode(): boolean;\n    get activeCell(): number;\n    get tableHeader(): string;\n    get prevButtonLabel(): string;\n    get nextButtonLabel(): string;\n    /**\n     * Callback to invoke when a new month is selected\n     * */\n    readonly change: EventEmitter<T>;\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * */\n    readonly yearSelected: EventEmitter<T>;\n    /** Emits when any date is activated. */\n    readonly pickerMomentChange: EventEmitter<T>;\n    /** Emits when use keyboard enter to select a calendar cell */\n    readonly keyboardEnter: EventEmitter<any>;\n    /** The body of calendar table */\n    calendarBodyElm: OwlCalendarBodyComponent;\n    get owlDTCalendarView(): boolean;\n    get owlDTCalendarMultiYearView(): boolean;\n    constructor(cdRef: ChangeDetectorRef, pickerIntl: OwlDateTimeIntl, dateTimeAdapter: DateTimeAdapter<T>);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    /**\n     * Handle a calendarCell selected\n     */\n    selectCalendarCell(cell: CalendarCell): void;\n    private selectYear;\n    /**\n     * Generate the previous year list\n     * */\n    prevYearList(event: any): void;\n    /**\n     * Generate the next year list\n     * */\n    nextYearList(event: any): void;\n    generateYearList(): void;\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean;\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean;\n    handleCalendarKeydown(event: KeyboardEvent): void;\n    /**\n     * Creates an CalendarCell for the given year.\n     */\n    private createYearCell;\n    private setSelectedYears;\n    /** Whether the given year is enabled. */\n    private isYearEnabled;\n    private isSameYearList;\n    /**\n     * Get a valid date object\n     */\n    private getValidDate;\n    private focusActiveCell;\n}\n"]}